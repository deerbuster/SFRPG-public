<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<template name="list_abilityclass">
		<windowlist>
			<datasource>.abilityset</datasource>
			<sortby><field>label</field></sortby>
			<script file="campaign/scripts/list_abilityclass.lua" />
		</windowlist>
	</template>	
	<template name="list_abilityitem">
		<windowlist>
			<noscroll />
			<datasource>.abilities</datasource>
			<sortby><field>level</field></sortby>
			<script file="campaign/scripts/list_ability.lua" />
		</windowlist>
	</template>
	<template name="list_abilitylevel">
		<windowlist>
			<datasource>.levels</datasource>
			<noscroll />
			<script file="campaign/scripts/list_abilitylevel.lua" />
		</windowlist>
	</template>

	<template name="button_abilityaction_mini">
		<button_roll>
			<bounds>1,1,20,20</bounds>
			<script>
				function action(draginfo)				
					local sSubRoll = nil;
					if subroll then
						sSubRoll = subroll[1];						
					end
					AbilityManager.useResolve(draginfo, window.getDatabaseNode(), sSubRoll);					
				end				
				
				function onButtonPress()					
					action();					
				end
				
				function onDragStart(button, x, y, draginfo)
					action(draginfo);
					return true;
				end
			</script>
		</button_roll>
	</template>
	<template name="button_abilityaction_use_rp">
		<button_roll>
			<script>
				function action(draginfo)				
					local sSubRoll = nil;
					if subroll then
						sSubRoll = subroll[1];						
					end					
					AbilityManager.useResolve(draginfo, window.getDatabaseNode(), sSubRoll);					
				end				
				
				function onButtonPress()				
					action();					
				end
				
				function onDragStart(button, x, y, draginfo)
					action(draginfo);
					return true;
				end
			</script>
		</button_roll>
	</template><template name="button_abilityaction">
		<button_roll>
			<script>
				function action(draginfo)	
					local node = window.getDatabaseNode();
					local sSubRoll = nil;
					if subroll then
						sSubRoll = subroll[1];						
					end					
					AbilityManager.onAbilityAction(draginfo, node, sSubRoll);					
				end				
				
				function onButtonPress()				
					action();					
				end
				
				function onDragStart(button, x, y, draginfo)
					action(draginfo);
					return true;
				end
			</script>
		</button_roll>
	</template>
	<template name="string_abilityactionview">
		<simplestringc>
			<anchored height="20" />
			<frame name="fieldlight" offset="7,5,7,5" />
			<center />
			<nodrag />
			<readonly />
			<cursor hover="hand" />
			<script>
				function action(draginfo)
					local sSubRoll = nil;
					if subroll then
						sSubRoll = subroll[1];
					end
					
					AbilityManager.onAbilityAction(draginfo, window.getDatabaseNode(), sSubRoll);
				end

				function onDoubleClick(x, y)
					action();
					return true;
				end
				
				function onDragStart(button, x, y, draginfo)
					action(draginfo);
					return true;
				end
			</script>
		</simplestringc>
	</template>
	<template name="button_poweractioneditor">
		<buttoncontrol>
			<anchored width="20" height="20">
				<top />
				<right parent="" offset="-5" />
			</anchored>
			<state icon="button_details" pressed="button_details_down" />
			<script>
				function onButtonPress()
					local w = Interface.openWindow(editor[1], window.getDatabaseNode());
					w.main.subwindow.name.setValue(DB.getValue(window.getDatabaseNode(), "...name", ""));
				end
			</script>
		</buttoncontrol>
	</template>
	
	<template name="number_abilitydc">
		<number_linked>
			<anchored width="25" height="20" />
			<frame name="fieldlight" offset="7,5,7,5" />
			<font>sheetnumber</font>
			<readonly />
			<source>
				<name>dc.misc</name>
				<op>+</op>
			</source>
			<source>
				<name>dc.abilitymod</name>
				<op>+</op>
			</source>
			<script>
				function onSourceUpdate()
					setValue(10 + calculateSources());
				end
			</script>
		</number_linked>
	</template>
	<template name="number_ability">
		<basicnumber>
			<anchored width="25" height="20" />
		</basicnumber>
	</template>
	<template name="number_abilityavailable">
		<number_ability>
			<anchored to="availablelevel" width="15">
				<top />
				<left anchor="right" relation="relative" offset="5" />
			</anchored>
			<script>
				function onValueChanged()
					window.onAbilityCounterUpdate();
				end
			</script>
		</number_ability>
	</template>
	<template name="number_abilityavailable2">
		<number_ability>
			<anchored to="availablelevel2" width="15">
				<top />
				<left anchor="right" relation="relative" offset="5" />
			</anchored>
			<script>
				function onValueChanged()				
					window.onAbilityCounterUpdate();
				end
			</script>
		</number_ability>
	</template>
	<template name="number_abilityavailable_mini">
		<numberfield>
			<bounds>0,0,0,0</bounds>
			<invisible />
			<script>
				function onValueChanged()
					window.onAbilityCounterUpdate();
				end
			</script>
		</numberfield>
	</template>
	
	<template name="string_abilitylevellabel_mini">
		<label>
			<frame name="rowshade" />
			<center />
			<empty textres="spelllevel_emptyname" />
			<script>
				function onClickDown(button, x, y)
					window.spells.setVisible(not window.spells.isVisible());
				end
			</script>
		</label>
	</template>
	<template name="string_ability">
		<basicstring>
			<script>
				function onEnter()
					if window.windowlist and window.windowlist.onEnter then
						return window.windowlist.onEnter();
					end
				end
			</script>
		</basicstring>
	</template>
	
	<template name="icon_usepower">
		<buttoncontrol>
			<anchored width="10" height="10" />
			<icon normal="spell_cast" />			
		</buttoncontrol>
	</template>
	<template name="counter_ability">
		<genericcontrol>
			<anchored width="10" height="20" />
			<stateicons>
				<on>button_checkon</on>
				<off>button_checkoff</off>
			</stateicons>
			<script file="campaign/scripts/ability_counter.lua" />
		</genericcontrol>
	</template>
	<template name="state_rp_required">
		<buttongroup_counter>
			<sourcefields>
				<maximum>1</maximum>
				<current>1</current>
			</sourcefields>
		</buttongroup_counter>
	</template>
	<template name="dice_ability_action">
		<basicdice>
			<script>
				function onInit()
					super.onInit();
					registerMenuItem(Interface.getString("menu_dieclear"), "erase", 4);
				end
				
				function onMenuSelection(selection)
					if selection == 4 then
						reset();
					end
				end
			</script>
		</basicdice>
	</template>
</root>